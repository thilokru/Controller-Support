buildscript {
    repositories {
        jcenter()
		mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

ext.configFile = file('build.properties')
ext.config = parseConfig(ext.configFile)

version = "${config.version}-${config.buildNumber}"
group = config.basePacket
archivesBaseName = config.modName

sourceCompatibility = "1.8"
targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = "1.8"
	targetCompatibility = "1.8"
}

minecraft {
    version = "${config.mcVersion}-${config.forgeVersion}"
    runDir = "run"
    
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = config.mcMappings
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
	//From Botania
	archiveName = "${baseName} ${version}.${extension}"
	
	exclude "**/*.bat"
    exclude "**/*.psd"
	exclude "**/*.exe"
}

task incrementBuildNumber(dependsOn: 'reobfJar') {
    config.buildNumber = (config.buildNumber.toString().toInteger()) + 1
    configFile.withWriter {
        config.toProperties().store(it, "")
    }
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

defaultTasks 'build', 'incrementBuildNumber'